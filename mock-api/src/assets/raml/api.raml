#%RAML 0.8
---
title: TCG API
baseUri: http://tcg.tcias.co.uk/api/{version}
version: v1
mediaType: application/json

/:
  description: Root resource
  get:
    description: returns all registered resources
    responses:
      200:
        body:
          example: !include examples/root.json
/sign-in:
  description: Sign in endpoint
  post:
    description: |
      Sign in to account using a third party service, that should return a valid token
    body:
      example: |
        {
          "thirdPartyToken": "QWxhZGRpbjpvcGVuIHNlc2FtZQ=="
        }
    responses:
      401:
        body:
          example: |
            {
              "Unauthorized": "Invalid credentials"
            }
      201:
        headers:
            Authorization:
              example: "Authorization = Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=="
        body:
          example: |
            {
              "Success": "You are logged in"
            }
/sign-up:
  description: Sign up endpoint
  post:
    description: |
      Receive response from third party service to authenticate and capture name, email and token
    body:
      example: |
        {
          "name": "Some Name",
          "email": "someone@somewhere.com",
          "authToken": "QWxhZGRpbjpvcGVuIHNlc2FtZQ=="
        }
    responses:
      201:
        headers:
          Authorization:
            example: "Authorization = Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=="
        body:
          example: |
            {
              "success": "Your account has been created"
            }
/me:
  description: My endpoint
  get:
    description: returns endpoints available to me
    responses:
      401:
        body:
          example: |
            {
              "unauthorized": "You are not logged in"
            }
      200:
        body:
          example: |
            {
              "accountHref": "me/account",
              "playerCharactersHref": "me/player-characters"
            }
  /account:
    description: Account details
    get:
      description: returns my account details
      responses:
        403:
          body:
            example: |
              {
                "forbidden": "You can't access this resource"
              }
        401:
          body:
            example: |
              {
                "unauthorized": "You are not logged in"
              }
        200:
          body:
            example: |
              {
                "name": "Your Name",
                "email": "someone@somewhere.com"
              }
  /player-characters:
    description: All of my characters
    get:
      description: return a list of my toons
      responses:
        200:
          body:
            example: !include examples/player-characters-list.json
    post:
      description: create new toon
      body:
        example: |
          {
            "race": "Orc",
            "archeType": "Ranged Damage Dealer",
          }
      responses:
        201:
          body:
            example: |
              {
                "race": "Orc",
                "type": "Ranged Damage Dealer",
                "class": "Hunter",
                "name": "Rexxar",
                "characterHref": "me/player-characters/1"
              }
    /{id}:
      get:
        description: returns the details of a player character
        responses:
          200:
            body:
              example: !include examples/player-character.json
/encounters:
  description: Collection of active encounters
  get:
    description: get a list of active encounters
    responses:
      200:
        body:
          schema: !include schemas/encounters.json
          example: !include examples/encounters.json
  post:
    description: start a new encounter
    responses:
      201:
        body:
  /{encounterId}:
    get:
      description: returns the encounter
      responses:
        200:
          body:
            example: !include examples/encounter.json
        404:
          body:
            example: !include examples/encounter-not-found.json
    /round:
      /{id}:
        put:
          description: updates the state of the current round

        get:
          description: returns the state of the current round
          responses:
            200:
              body:
                example: !include examples/encounter-round.json
/compendium:
  description: returns available resources
  get:
  /monsters:
    description: returns a list of monsters
    get:
      responses:
        200:
          body:
            example: !include examples/monsters.json
    /{id}:
      description: returns the details for this monster
      get:
        responses:
          200:
            body:
              example: !include examples/monster.json
  /races:
    description: returns a list of character races
    get:
      responses:
        200:
          body:
            example: !include examples/compendium-races.json
  /arche-types:
    description: returns a list of character archetypes
    get:
      responses:
        200:
          body:
            example: !include examples/compendium-arche-types.json